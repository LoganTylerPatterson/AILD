// Generated by view binder compiler. Do not edit!
package com.runtimeterror.aild.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TimePicker;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.viewbinding.ViewBinding;
import com.runtimeterror.aild.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentAlarmBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button buttonDone;

  @NonNull
  public final Button buttonSound;

  @NonNull
  public final EditText editTextAlarmTitle;

  @NonNull
  public final Guideline guideline3;

  @NonNull
  public final TimePicker timePicker;

  @NonNull
  public final Toolbar toolbarAlarmFrag;

  private FragmentAlarmBinding(@NonNull ConstraintLayout rootView, @NonNull Button buttonDone,
      @NonNull Button buttonSound, @NonNull EditText editTextAlarmTitle,
      @NonNull Guideline guideline3, @NonNull TimePicker timePicker,
      @NonNull Toolbar toolbarAlarmFrag) {
    this.rootView = rootView;
    this.buttonDone = buttonDone;
    this.buttonSound = buttonSound;
    this.editTextAlarmTitle = editTextAlarmTitle;
    this.guideline3 = guideline3;
    this.timePicker = timePicker;
    this.toolbarAlarmFrag = toolbarAlarmFrag;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentAlarmBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentAlarmBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_alarm, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentAlarmBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_done;
      Button buttonDone = rootView.findViewById(id);
      if (buttonDone == null) {
        break missingId;
      }

      id = R.id.button_sound;
      Button buttonSound = rootView.findViewById(id);
      if (buttonSound == null) {
        break missingId;
      }

      id = R.id.edit_text_alarm_title;
      EditText editTextAlarmTitle = rootView.findViewById(id);
      if (editTextAlarmTitle == null) {
        break missingId;
      }

      id = R.id.guideline3;
      Guideline guideline3 = rootView.findViewById(id);
      if (guideline3 == null) {
        break missingId;
      }

      id = R.id.time_picker;
      TimePicker timePicker = rootView.findViewById(id);
      if (timePicker == null) {
        break missingId;
      }

      id = R.id.toolbar_alarm_frag;
      Toolbar toolbarAlarmFrag = rootView.findViewById(id);
      if (toolbarAlarmFrag == null) {
        break missingId;
      }

      return new FragmentAlarmBinding((ConstraintLayout) rootView, buttonDone, buttonSound,
          editTextAlarmTitle, guideline3, timePicker, toolbarAlarmFrag);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
