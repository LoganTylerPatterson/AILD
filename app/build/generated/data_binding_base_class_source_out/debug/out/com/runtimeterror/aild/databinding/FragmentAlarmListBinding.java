// Generated by view binder compiler. Do not edit!
package com.runtimeterror.aild.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.runtimeterror.aild.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentAlarmListBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final LinearLayout boxFinalizeEdit;

  @NonNull
  public final Button buttonCancel;

  @NonNull
  public final Button buttonDelete;

  @NonNull
  public final FloatingActionButton fabAlarm;

  @NonNull
  public final Guideline guideline2;

  @NonNull
  public final RecyclerView rvAlarms;

  private FragmentAlarmListBinding(@NonNull ConstraintLayout rootView,
      @NonNull LinearLayout boxFinalizeEdit, @NonNull Button buttonCancel,
      @NonNull Button buttonDelete, @NonNull FloatingActionButton fabAlarm,
      @NonNull Guideline guideline2, @NonNull RecyclerView rvAlarms) {
    this.rootView = rootView;
    this.boxFinalizeEdit = boxFinalizeEdit;
    this.buttonCancel = buttonCancel;
    this.buttonDelete = buttonDelete;
    this.fabAlarm = fabAlarm;
    this.guideline2 = guideline2;
    this.rvAlarms = rvAlarms;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentAlarmListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentAlarmListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_alarm_list, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentAlarmListBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.box_finalize_edit;
      LinearLayout boxFinalizeEdit = rootView.findViewById(id);
      if (boxFinalizeEdit == null) {
        break missingId;
      }

      id = R.id.button_cancel;
      Button buttonCancel = rootView.findViewById(id);
      if (buttonCancel == null) {
        break missingId;
      }

      id = R.id.button_delete;
      Button buttonDelete = rootView.findViewById(id);
      if (buttonDelete == null) {
        break missingId;
      }

      id = R.id.fab_alarm;
      FloatingActionButton fabAlarm = rootView.findViewById(id);
      if (fabAlarm == null) {
        break missingId;
      }

      id = R.id.guideline2;
      Guideline guideline2 = rootView.findViewById(id);
      if (guideline2 == null) {
        break missingId;
      }

      id = R.id.rv_alarms;
      RecyclerView rvAlarms = rootView.findViewById(id);
      if (rvAlarms == null) {
        break missingId;
      }

      return new FragmentAlarmListBinding((ConstraintLayout) rootView, boxFinalizeEdit,
          buttonCancel, buttonDelete, fabAlarm, guideline2, rvAlarms);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
